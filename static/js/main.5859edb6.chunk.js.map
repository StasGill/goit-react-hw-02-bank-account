{"version":3,"sources":["components/Controls/controlsStyle.module.css","components/Balance/balanceStyle.module.css","components/Transaction/transactionStyle.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/Transaction/Transaction.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","Controls","depositOn","withdrawOn","onChange","className","style","controls","type","name","onClick","Balance","deposit","balance","withdrow","balanceContainer","role","aria-label","Transaction","trans","transactionContainer","map","prop","key","id","amount","date","notifyA","toast","containerId","notifyB","Dashboard","state","transactions","e","setState","target","value","addTransation","transAction","uuid","Date","toLocaleDateString","toLocaleTimeString","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,iBAAmB,yC,mBCArCD,EAAOC,QAAU,CAAC,qBAAuB,iD,+PCqB1BC,MAlBf,YAAwD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACzC,OACE,6BAASC,UAAWC,IAAMC,UACxB,2BAAOH,SAAUA,EAAUI,KAAK,SAASC,KAAK,WAC9C,4BAAQC,QAASR,EAAWM,KAAK,UAAjC,WAGA,4BAAQE,QAASP,EAAYK,KAAK,UAAlC,c,iBCiBSG,MAxBf,YAAkD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACnC,OACE,6BAAST,UAAWC,IAAMS,kBACxB,8BACE,0BAAMC,KAAK,MAAMC,aAAW,OAA5B,gBAGCL,EAJH,KAMA,8BACE,0BAAMI,KAAK,MAAMC,aAAW,QAA5B,gBAGCH,EAJH,KAMA,0CAAgBD,EAAhB,O,iBCmBSK,MAlCf,YAAiC,IAAVC,EAAS,EAATA,MACrB,OACE,2BAAOd,UAAWC,IAAMc,sBACtB,+BACE,4BACE,2CACA,sCACA,sCAIJ,+BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,4BAAKF,EAAKd,MACV,4BAAKc,EAAKG,QACV,4BAAKH,EAAKI,aCXhBC,EAAU,kBACdC,YAAM,oSAA0D,CAC9DC,YAAa,OAEXC,EAAU,kBACdF,YAAM,8MAA0C,CAAEC,YAAa,OAmElDE,E,2MAhEbC,MAAQ,CAAEP,OAAQ,EAAGZ,QAAS,EAAGD,QAAS,EAAGE,SAAU,EAAGmB,aAAc,I,EAExE7B,SAAW,SAAA8B,GACT,EAAKC,SAAS,CAAEV,QAASS,EAAEE,OAAOC,S,EAGpClC,WAAa,YACN,EAAK6B,MAAMP,QAAU,EAAKO,MAAMnB,SACnC,EAAKsB,UAAS,SAAAH,GAAK,MAAK,CACtBnB,QAASmB,EAAMnB,QAAUmB,EAAMP,WAEjC,EAAKU,UAAS,SAAAH,GAAK,MAAK,CACtBlB,SAAUkB,EAAMlB,SAAWkB,EAAMP,WAEnC,EAAKa,cAAc,aAEnBX,K,EAIJzB,UAAY,WACN,EAAK8B,MAAMP,OAAS,GACtB,EAAKU,UAAS,SAAAH,GAAK,MAAK,CACtBnB,QAASmB,EAAMnB,QAAUmB,EAAMP,WAEjC,EAAKU,UAAS,SAAAH,GAAK,MAAK,CACtBpB,QAASoB,EAAMpB,QAAUoB,EAAMP,WAGjC,EAAKa,cAAc,YAEnBR,K,EAIJQ,cAAgB,SAAA9B,GACd,IAAM+B,EAAc,CAClBf,GAAIgB,MACJhC,OACAiB,OAAQ,EAAKO,MAAMP,OACnBC,MAAM,IAAIe,MAAOC,sBAAuB,IAAID,MAAOE,sBAErD,EAAKR,UAAS,SAAAH,GAAK,MAAK,CACtBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BM,S,wEAIhC,IAAD,EAC8CK,KAAKZ,MAAlDpB,EADD,EACCA,QAASC,EADV,EACUA,QAASC,EADnB,EACmBA,SAAUmB,EAD7B,EAC6BA,aACpC,OACE,yBAAK5B,UAAU,UACb,kBAAC,IAAD,MACA,kBAAC,EAAD,CACEF,WAAYyC,KAAKzC,WACjBD,UAAW0C,KAAK1C,UAChBE,SAAUwC,KAAKxC,WAEjB,kBAAC,EAAD,CAASQ,QAASA,EAASC,QAASA,EAASC,SAAUA,IACvD,kBAAC,EAAD,CAAaK,MAAOc,S,GA3DJY,IAAMC,W,MCHfC,MARf,WACE,OACE,yBAAK1C,UAAU,OACb,kBAAC,EAAD,QCFN2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5859edb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controlsStyle_controls__35Q1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceContainer\":\"balanceStyle_balanceContainer__17yrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionContainer\":\"transactionStyle_transactionContainer__Adn_k\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './controlsStyle.module.css';\n\nfunction Controls({ depositOn, withdrawOn, onChange }) {\n  return (\n    <section className={style.controls}>\n      <input onChange={onChange} type=\"number\" name=\"amount\" />\n      <button onClick={depositOn} type=\"button\">\n        Deposit\n      </button>\n      <button onClick={withdrawOn} type=\"button\">\n        Withdraw\n      </button>\n    </section>\n  );\n}\nControls.propTypes = {\n  depositOn: PropTypes.func.isRequired,\n  withdrawOn: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './balanceStyle.module.css';\n\nfunction Balance({ deposit, balance, withdrow }) {\n  return (\n    <section className={style.balanceContainer}>\n      <span>\n        <span role=\"img\" aria-label=\"top\">\n          ⬆️\n        </span>\n        {deposit}$\n      </span>\n      <span>\n        <span role=\"img\" aria-label=\"down\">\n          ⬇️\n        </span>\n        {withdrow}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n}\nBalance.propTypes = {\n  deposit: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n  withdrow: PropTypes.number.isRequired,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './transactionStyle.module.css';\n\nfunction Transaction({ trans }) {\n  return (\n    <table className={style.transactionContainer}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {trans.map(prop => (\n          <tr key={prop.id}>\n            <td>{prop.type}</td>\n            <td>{prop.amount}</td>\n            <td>{prop.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransaction.propTypes = {\n  trans: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\nexport default Transaction;\n","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport uuid from 'uuid/v1';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport Transaction from '../Transaction/Transaction';\n\nconst notifyA = () =>\n  toast('На счету недостаточно средств для проведения операции!', {\n    containerId: 'A',\n  });\nconst notifyB = () =>\n  toast('Введите сумму для проведения операции!', { containerId: 'B' });\n\nclass Dashboard extends React.Component {\n  state = { amount: 0, balance: 0, deposit: 0, withdrow: 0, transactions: [] };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n  };\n\n  withdrawOn = () => {\n    if (+this.state.amount < +this.state.balance) {\n      this.setState(state => ({\n        balance: state.balance - state.amount,\n      }));\n      this.setState(state => ({\n        withdrow: state.withdrow + state.amount,\n      }));\n      this.addTransation('WITHDRAW');\n    } else {\n      notifyA();\n    }\n  };\n\n  depositOn = () => {\n    if (this.state.amount > 0) {\n      this.setState(state => ({\n        balance: state.balance + state.amount,\n      }));\n      this.setState(state => ({\n        deposit: state.deposit + state.amount,\n      }));\n\n      this.addTransation('DEPOSIT');\n    } else {\n      notifyB();\n    }\n  };\n\n  addTransation = type => {\n    const transAction = {\n      id: uuid(),\n      type,\n      amount: this.state.amount,\n      date: new Date().toLocaleDateString() + new Date().toLocaleTimeString(),\n    };\n    this.setState(state => ({\n      transactions: [...state.transactions, transAction],\n    }));\n  };\n\n  render() {\n    const { deposit, balance, withdrow, transactions } = this.state;\n    return (\n      <div className=\"Reader\">\n        <ToastContainer />\n        <Controls\n          withdrawOn={this.withdrawOn}\n          depositOn={this.depositOn}\n          onChange={this.onChange}\n        />\n        <Balance deposit={deposit} balance={balance} withdrow={withdrow} />\n        <Transaction trans={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}